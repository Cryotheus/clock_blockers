@using Sandbox;
@using Sandbox.MenuSystem;
@using Sandbox.UI;
@using Sandbox.UI.GameMenu;
@using System
@inherits Panel
@namespace ClockBlockers.UI.GameMenu

<root class="root-create">
	<div class="simple-container">
		<div class="navigation-bar">
			<a class="home-button"><img class="mdi-button" src="menu/mdi/home.svg"></a>
			<h3>Create A Game</h3>
		</div>

		<div class="pair">
			<div class="columned">
				<div>
					<MapButton MapIdent=@Map OnClicked="@OnMapClicked"></MapButton>
				</div>
				<form>
					<input type="text" id="server-name">
				</form>
			</div>
			<div class="columned align-right">
				<div class="columned setting">
					<h5>Max Players</h5>
					<SliderControl ShowTextEntry="@true" ShowRange="@true" Min=@(1f) Max=@(MaxPlayersSupported) Value:bind="@MaxPlayers"></SliderControl>
				</div>

				<div class="columned setting">
					<h5>Server Name</h5>
					<TextEntry Value:bind="@GameTitle" Tooltip="Server Name"> </TextEntry>
				</div>
			</div>
		</div>

		<div class="footer">
			<p class="button center" onclick=@StartGame>Start Game</p>
		</div>
	</div>
</root>

@code
{
	public string GameTitle { get; set; } = "Clock Blockers";
	public float MaxPlayers { get; set; } = 8;
	public string Map { get; set; } = "facepunch.square";
	bool ShowMapOption = true;
	int MaxPlayersSupported = 1;

	protected override void OnParametersSet() {
		MaxPlayersSupported = Game.Menu.Package.GetMeta("MaxPlayers", 1);
		MaxPlayers = MaxPlayersSupported;

		//ShowMapOption = Game.Menu.Package.MapSelectionMode != DataModel.Game.MapSelect.Hidden;
		//ShowMapOption = ShowMapOption && Game.Menu.Package.MapSelectionMode != DataModel.Game.MapSelect.Empty;
	}

	public void StartGame() {
		_ = Game.Menu.StartServerAsync( MaxPlayers.CeilToInt(), GameTitle, Map );
		this.Navigate( "/active" );
	}

	void OnMapClicked() {
		Game.Overlay.ShowPackageSelector( "type:map sort:popular", OnMapSelected );
	}

	void OnMapSelected( Package map ) {
		Map = map.FullIdent;
		StateHasChanged();
	}

	public override void Tick() {
		base.Tick();

		if (!IsVisible)
			return;
	}
}

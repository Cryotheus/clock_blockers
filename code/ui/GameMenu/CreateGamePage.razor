@code {
	#pragma warning disable
}
@using Sandbox;
@using Sandbox.MenuSystem;
@using Sandbox.UI;
@using Sandbox.UI.GameMenu;
@using System
@inherits Panel
@namespace ClockBlockers.UI.GameMenu

<root class="layout">
	<div class="navigation-bar">
		<a class="home-button" href="/"><img class="mdi-button" src="menu/mdi/home.svg"></a>
		<h3>Create A Game</h3>
	</div>

	<div class="columned">
		@if (ShowMapOption)
		{
			<MapButton MapIdent=@Map OnClicked="@OnMapClicked"></MapButton>
		}

		<form>
			<input type="text" id="server-name"><br>
			<!--
			<FormGroup>
				<Label>Server Name</Label>
				<Control>
					<TextEntry Value:bind="@GameTitle" Tooltip="Server Title"> </TextEntry>
				</Control>
			</FormGroup>

			<FormGroup class="form-group">
				<Label>Max Players</Label>
				<Control>
					<SliderControl ShowTextEntry="@true" ShowRange="@true" Min=@(1.0f) Max=@(MaxPlayersSupported) Value:bind="@MaxPlayers"></SliderControl>
				</Control>
			</FormGroup> -->

		</form>

	</div>
	
	<a onclick=@StartGame>Start Game</a>
</root>

@code
{
	public string GameTitle { get; set; } = "My Server Name";
	public float MaxPlayers { get; set; } = 8;
	public string Map { get; set; } = "facepunch.square";
	bool ShowMapOption = true;
	int MaxPlayersSupported = 1;

	protected override void OnParametersSet()
	{
		MaxPlayersSupported = Game.Menu.Package.GetMeta("MaxPlayers", 1);
		MaxPlayers = MaxPlayersSupported;

		//ShowMapOption = Game.Menu.Package.MapSelectionMode != DataModel.Game.MapSelect.Hidden;
		//ShowMapOption = ShowMapOption && Game.Menu.Package.MapSelectionMode != DataModel.Game.MapSelect.Empty;
	}

	public void StartGame()
	{
		_ = Game.Menu.StartServerAsync( MaxPlayers.CeilToInt(), GameTitle, Map );
		this.Navigate( "/active" );
	}

	void OnMapClicked()
	{
		Game.Overlay.ShowPackageSelector( "type:map sort:popular", OnMapSelected );
	}

	void OnMapSelected( Package map )
	{
		Map = map.FullIdent;
		StateHasChanged();
	}

	public override void Tick()
	{
		base.Tick();

		if (!IsVisible)
			return;
	}
}
